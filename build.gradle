apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'findbugs'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

findbugs{
  ignoreFailures = true
  sourceSets = [sourceSets.main]
}

task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}

pmd{
  toolVersion = '5.1.1'
  ignoreFailures = true
  sourceSets = [sourceSets.main]
    ruleSets = [
        'java-android',
        'java-basic',
        'java-braces',
        'java-clone',
        'java-codesize',
        'java-comments',
        'java-controversial',
        'java-coupling',
        'java-design',
        'java-empty',
        'java-finalizers',
        'java-imports',
        'java-j2ee',
        'java-javabeans',
        'java-junit',
        'java-logging-jakarta-commons',
        'java-logging-java',
        'java-migrating',
        'java-naming',
        'java-optimizations',
        'java-strictexception',
        'java-strings',
        'java-sunsecure',
        'java-typeresolution',
        'java-unnecessary',
        'java-unusedcode'
        ]
}

checkstyle {
    toolVersion "7.6.1"
    ignoreFailures = true
    sourceSets = [sourceSets.main]
}

checkstyleMain {
    configProperties = ['basedir': "$rootDir/config/checkstyle"]
    configFile = new File(rootDir, 'config/checkstyle/checkstyle.xml')
}

repositories {
  mavenCentral()
  maven { url 'http://repo1.maven.org/maven2' }
}

dependencies {
  testCompile 'junit:junit:4.12'
}

task cpdMain(dependsOn: 'pmdMain') {
  ext.ignoreFailures = true

  doLast {
    File outDir = new File(reporting.baseDir, 'cpd/')
    // Make sure the output dir exists to prevent a ReportException
    outDir.mkdirs()

    ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask',
            classpath: configurations.pmd.asPath)

    ant.cpd(
        minimumTokenCount: '100',
        format: 'xml',
        outputFile: new File(outDir , 'main.xml')) {
        fileset(dir: projectDir.getPath()) {
              sourceSets.main.java.each { sourceDir ->
                include(name: project.relativePath(sourceDir.getPath()))
            }
          }
    }
  }
}
check.dependsOn cpdMain

